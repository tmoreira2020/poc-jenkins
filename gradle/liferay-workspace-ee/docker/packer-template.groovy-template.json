{
  "variables": {
    "liferay_user": "liferay",
    "liferay_group": "liferay",
    "liferay_service_name": "liferay-tomcat",

    "liferay_bundle_deb_source": "../../../build/liferay-workspace.local_0.0.0-1_amd64.deb",
    "liferay_bundle_deb_name": "liferay-workspace.local_0.0.0-1_amd64.deb",

    "cleanup_script_source": "packer_files/cleanup-image-tomcat.sh",

    "docker_liferay_startup_script_source": "packer_files/tomcat/liferay-tomcat.sh",
    "docker_liferay_startup_script_destination": "/usr/bin/liferay-tomcat",

    "docker_from": "ubuntu:16.04",
    "docker_container_repository": "acme/liferay-portal-tomcat",
    "docker_tag": "1.0.0-1-raw"
  },

  "builders": [
    {
      "name": "liferay-docker",
      "type": "docker",
      "image": "{{user `docker_from`}}",
      "commit": "true",
      "run_command": [
              "-d",
              "-i",
              "-t",
              "{{.Image}}",
              "/bin/bash"
      ]
    }
  ],

  "provisioners": [
    {
      "type": "file",
      "source": "{{user `liferay_bundle_deb_source`}}",
      "destination": "/tmp/{{user `liferay_bundle_deb_name`}}"
    },
    {
      "type": "shell",
      "inline": [
        "echo '==> Installing Liferay bundle from .deb'",
        "set -x",
        "dpkg -i /tmp/{{user `liferay_bundle_deb_name`}}",

        "rm /tmp/{{user `liferay_bundle_deb_name`}}"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "echo '==> Disabling Liferay as OS service'",
        "set -x",

        "# Do not make Liferay an OS service - we will run it manually (in foreground for Docker)",
        "systemctl disable {{user `liferay_service_name`}}",

        "# Do NOT remove the file, since some extra provisioners may want to try ",
        "# to disable it as well (dynatrace-monitoring, linux-security-updates",
        "# rm /etc/init.d/{{user `liferay_service_name`}}"
      ]
    },

    {
      "type": "file",
      "source": "{{user `docker_liferay_startup_script_source`}}",
      "destination": "{{user `docker_liferay_startup_script_destination`}}"
    },
    {
      "type": "shell",
      "inline": [
        "echo '==> Setting up Liferay bundle startup script {{user `docker_liferay_startup_script_destination`}}'",
        "set -x",
        "chown {{user `liferay_user`}}:{{user `liferay_group`}} {{user `docker_liferay_startup_script_destination`}}",
        "chmod 744 {{user `docker_liferay_startup_script_destination`}}"
      ]
    },

    {
      "type": "shell",
      "script": "{{user `cleanup_script_source`}}"
    }
    @EXTRA_PROVISIONERS_CONTENT@
  ],

  "post-processors": [
    [
      {
        "type": "docker-tag",
        "repository": "{{user `docker_container_repository`}}",
        "tag": "{{user `docker_tag`}}"
      }
    ]
  ]
}