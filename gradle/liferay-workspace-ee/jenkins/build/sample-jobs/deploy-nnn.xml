<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description>Deploys the chosen build from 'build-nnn' using SSH to remote server(s).

TODO:
  (1) Make a copy of this job for the environment you want to build, e.g. create a job
      named 'deploy-dev'
  (2) Once created, configure the new job
  (3) Search the page (Ctrl / command + F in browser) for every occurrence of 'nnn' and
      replace it with the name of your environment as created in Liferay Workspace sources,
      like 'dev'.
  (4) Select appropriate server(s). You might need to create them first in your Jenkins.
  (5) If you're building .rpm files, make sure they are correctly copied from the build job, uploaded and installed over SSH.</description>
  <displayName>SAMPLE deploy-nnn</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>3</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.copyartifact.BuildSelectorParameter plugin="copyartifact@1.38.1">
          <name>BUILD_TO_COPY_FOR_DEPLOY</name>
          <description>Please select the build # you want to deploy. .deb / .rpm from that build will be used to redeploy the app servers.</description>
          <defaultSelector class="hudson.plugins.copyartifact.SpecificBuildSelector">
            <buildNumber>lastSuccessfulBuild</buildNumber>
          </defaultSelector>
        </hudson.plugins.copyartifact.BuildSelectorParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <EnvInjectJobProperty plugin="envinject@2.1">
      <info>
        <propertiesContent>LFR_WORKSPACE_ENV=nnn</propertiesContent>
        <secureGroovyScript plugin="script-security@1.27">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Clean the workspace, remove any stale files copied by previous runs
rm -rf *</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38.1">
      <project>build-nnn</project>
      <filter>build/*.deb, build/*.rpm</filter>
      <target/>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.ParameterizedBuildSelector">
        <parameterName>BUILD_TO_COPY_FOR_DEPLOY</parameterName>
      </selector>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <resultVariableSuffix>BUILD</resultVariableSuffix>
    </hudson.plugins.copyartifact.CopyArtifact>
    <jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin plugin="publish-over-ssh@1.17">
      <delegate>
        <consolePrefix>SSH: </consolePrefix>
        <delegate>
          <publishers>
            <jenkins.plugins.publish__over__ssh.BapSshPublisher>
              <configName>liferay-server</configName>
              <verbose>true</verbose>
              <transfers>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory>jenkins-build-$COPYARTIFACT_BUILD_NUMBER_BUILD_deploy-$BUILD_NUMBER</remoteDirectory>
                  <sourceFiles>*.deb</sourceFiles>
                  <excludes/>
                  <removePrefix/>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>set -ex

# '/tmp' must be matching your SSH server's config - 'Remote Directory'
SSH_SERVER_CONFIGURED_ROOT_DIR='/tmp'

REMOTE_DIR=jenkins-build-$COPYARTIFACT_BUILD_NUMBER_BUILD_deploy-$BUILD_NUMBER

cd ${SSH_SERVER_CONFIGURED_ROOT_DIR}/$REMOTE_DIR


# Make sure to check 'Advanced' -&gt; 'Exec in pty' to be able to use 'sudo'
sudo dpkg -i *.deb

# Alternate if copying RPM artifacts and installing it into OS
# sudo rpm -ivh --replacefiles --replacepkgs *.rpm


# Start the new bundle
sudo /etc/init.d/liferay-tomcat start


# Cleanup any uploaded artifacts
sudo rm -rf ${SSH_SERVER_CONFIGURED_ROOT_DIR}/$REMOTE_DIR
                                            </execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>true</usePty>
                  <useAgentForwarding>false</useAgentForwarding>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              </transfers>
              <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
              <usePromotionTimestamp>false</usePromotionTimestamp>
            </jenkins.plugins.publish__over__ssh.BapSshPublisher>
          </publishers>
          <continueOnError>false</continueOnError>
          <failOnError>false</failOnError>
          <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
          <hostConfigurationAccess reference="../.." class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin"/>
        </delegate>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>workspace@liferay.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.11">
      <bindings class="empty-list"/>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
